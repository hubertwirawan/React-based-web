{"ast":null,"code":"var _jsxFileName = \"/Users/hubertwirawan/Desktop/proj/react-website-v1-master/src/components/pages/SignUp.js\";\nimport React from 'react';\nimport '../../App.css';\nimport { useFormik } from 'formik';\n\nconst SignupForm = () => {\n  // Note that we have to initialize ALL of fields with values. These\n  // could come from props, but since we don’t want to prefill this form,\n  // we just use an empty string. If we don’t do this, React will yell\n  // at us.\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"firstName\",\n    name: \"firstName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"lastName\",\n    name: \"lastName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }, \"Submit\"));\n};","map":{"version":3,"names":["React","useFormik","SignupForm","formik","initialValues","firstName","lastName","email","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange"],"sources":["/Users/hubertwirawan/Desktop/proj/react-website-v1-master/src/components/pages/SignUp.js"],"sourcesContent":["import React from 'react';\nimport '../../App.css';\n\n\n import { useFormik } from 'formik';\n \n const SignupForm = () => {\n   // Note that we have to initialize ALL of fields with values. These\n   // could come from props, but since we don’t want to prefill this form,\n   // we just use an empty string. If we don’t do this, React will yell\n   // at us.\n   const formik = useFormik({\n     initialValues: {\n       firstName: '',\n       lastName: '',\n       email: '',\n     },\n     onSubmit: values => {\n       alert(JSON.stringify(values, null, 2));\n     },\n   });\n   return (\n     <form onSubmit={formik.handleSubmit}>\n       <label htmlFor=\"firstName\">First Name</label>\n       <input\n         id=\"firstName\"\n         name=\"firstName\"\n         type=\"text\"\n         onChange={formik.handleChange}\n         value={formik.values.firstName}\n       />\n \n       <label htmlFor=\"lastName\">Last Name</label>\n       <input\n         id=\"lastName\"\n         name=\"lastName\"\n         type=\"text\"\n         onChange={formik.handleChange}\n         value={formik.values.lastName}\n       />\n \n       <label htmlFor=\"email\">Email Address</label>\n       <input\n         id=\"email\"\n         name=\"email\"\n         type=\"email\"\n         onChange={formik.handleChange}\n         value={formik.values.email}\n       />\n \n       <button type=\"submit\">Submit</button>\n     </form>\n   );\n };"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AAGC,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACvB;EACA;EACA;EACA;EACA,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,SAAS,EAAE,EADE;MAEbC,QAAQ,EAAE,EAFG;MAGbC,KAAK,EAAE;IAHM,CADQ;IAMvBC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACD;EARsB,CAAD,CAAxB;EAUA,oBACE;IAAM,QAAQ,EAAEN,MAAM,CAACU,YAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBADF,eAEE;IACE,EAAE,EAAC,WADL;IAEE,IAAI,EAAC,WAFP;IAGE,IAAI,EAAC,MAHP;IAIE,QAAQ,EAAEV,MAAM,CAACW,YAJnB;IAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcJ,SALvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAUE;IAAO,OAAO,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAVF,eAWE;IACE,EAAE,EAAC,UADL;IAEE,IAAI,EAAC,UAFP;IAGE,IAAI,EAAC,MAHP;IAIE,QAAQ,EAAEF,MAAM,CAACW,YAJnB;IAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcH,QALvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXF,eAmBE;IAAO,OAAO,EAAC,OAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAnBF,eAoBE;IACE,EAAE,EAAC,OADL;IAEE,IAAI,EAAC,OAFP;IAGE,IAAI,EAAC,OAHP;IAIE,QAAQ,EAAEH,MAAM,CAACW,YAJnB;IAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcF,KALvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EApBF,eA4BE;IAAQ,IAAI,EAAC,QAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YA5BF,CADF;AAgCD,CA/CD"},"metadata":{},"sourceType":"module"}